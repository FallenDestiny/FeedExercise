06df62c2da240cac1690b621cb0a8349
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var operators = {
  '*': function _(v1, v2) {
    return v1 * v2;
  },
  '+': function _(v1, v2) {
    return v1 + v2;
  },
  '-': function _(v1, v2) {
    return v1 - v2;
  },
  '/': function _(v1, v2) {
    return v1 / v2;
  }
};
var _default = {
  isOperation: isOperation,
  exec: exec
};
exports.default = _default;

function isOperation(str) {
  var opInfo = findOperator(str);

  if (opInfo) {
    opInfo.v1 = str.substr(0, opInfo.pos).trim();
    opInfo.v2 = str.substr(opInfo.pos + 1).trim();
    delete opInfo.pos;
    return opInfo;
  } else {
    return false;
  }
}

function exec(opInfo) {
  assertOperator(opInfo.operator);
  assertValue(opInfo.v1);
  assertValue(opInfo.v2);

  if (opInfo.operator === '/') {
    assertDivisor(opInfo.v2);
  }

  var fn = operators[opInfo.operator];
  return fn(opInfo.v1, opInfo.v2);
}

function findOperator(str) {
  for (var operator in operators) {
    var pos = str.indexOf(operator);

    if (pos >= 0) {
      return {
        operator: operator,
        pos: pos
      };
    }
  }
}

function assertOperator(operator) {
  if (!operators[operator]) {
    throw new Error('Unknown operator: ' + operator);
  }
}

function assertValue(value) {
  if (typeof value !== 'number') {
    throw new Error('Operation value should be number, you try: ' + String(value));
  }
}

function assertDivisor(divisor) {
  if (divisor === 0) {
    throw new Error('Operation divisor should not be zero');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZXJhdGlvbi5qcyJdLCJuYW1lcyI6WyJvcGVyYXRvcnMiLCJ2MSIsInYyIiwiaXNPcGVyYXRpb24iLCJleGVjIiwic3RyIiwib3BJbmZvIiwiZmluZE9wZXJhdG9yIiwic3Vic3RyIiwicG9zIiwidHJpbSIsImFzc2VydE9wZXJhdG9yIiwib3BlcmF0b3IiLCJhc3NlcnRWYWx1ZSIsImFzc2VydERpdmlzb3IiLCJmbiIsImluZGV4T2YiLCJFcnJvciIsInZhbHVlIiwiU3RyaW5nIiwiZGl2aXNvciJdLCJtYXBwaW5ncyI6Ijs7OztBQUtBLElBQU1BLFNBQVMsR0FBRztBQUNoQixPQUFLLFdBQUNDLEVBQUQsRUFBS0MsRUFBTDtBQUFBLFdBQVlELEVBQUUsR0FBR0MsRUFBakI7QUFBQSxHQURXO0FBRWhCLE9BQUssV0FBQ0QsRUFBRCxFQUFLQyxFQUFMO0FBQUEsV0FBWUQsRUFBRSxHQUFHQyxFQUFqQjtBQUFBLEdBRlc7QUFHaEIsT0FBSyxXQUFDRCxFQUFELEVBQUtDLEVBQUw7QUFBQSxXQUFZRCxFQUFFLEdBQUdDLEVBQWpCO0FBQUEsR0FIVztBQUloQixPQUFLLFdBQUNELEVBQUQsRUFBS0MsRUFBTDtBQUFBLFdBQVlELEVBQUUsR0FBR0MsRUFBakI7QUFBQTtBQUpXLENBQWxCO2VBT2U7QUFDYkMsRUFBQUEsV0FBVyxFQUFYQSxXQURhO0FBRWJDLEVBQUFBLElBQUksRUFBSkE7QUFGYSxDOzs7QUFTZixTQUFTRCxXQUFULENBQXFCRSxHQUFyQixFQUEwQjtBQUN4QixNQUFJQyxNQUFNLEdBQUdDLFlBQVksQ0FBQ0YsR0FBRCxDQUF6Qjs7QUFDQSxNQUFJQyxNQUFKLEVBQVk7QUFDVkEsSUFBQUEsTUFBTSxDQUFDTCxFQUFQLEdBQVlJLEdBQUcsQ0FBQ0csTUFBSixDQUFXLENBQVgsRUFBY0YsTUFBTSxDQUFDRyxHQUFyQixFQUEwQkMsSUFBMUIsRUFBWjtBQUNBSixJQUFBQSxNQUFNLENBQUNKLEVBQVAsR0FBWUcsR0FBRyxDQUFDRyxNQUFKLENBQVdGLE1BQU0sQ0FBQ0csR0FBUCxHQUFhLENBQXhCLEVBQTJCQyxJQUEzQixFQUFaO0FBQ0EsV0FBT0osTUFBTSxDQUFDRyxHQUFkO0FBQ0EsV0FBT0gsTUFBUDtBQUNELEdBTEQsTUFLTztBQUNMLFdBQU8sS0FBUDtBQUNEO0FBQ0Y7O0FBTUQsU0FBU0YsSUFBVCxDQUFjRSxNQUFkLEVBQXNCO0FBQ3BCSyxFQUFBQSxjQUFjLENBQUNMLE1BQU0sQ0FBQ00sUUFBUixDQUFkO0FBQ0FDLEVBQUFBLFdBQVcsQ0FBQ1AsTUFBTSxDQUFDTCxFQUFSLENBQVg7QUFDQVksRUFBQUEsV0FBVyxDQUFDUCxNQUFNLENBQUNKLEVBQVIsQ0FBWDs7QUFDQSxNQUFJSSxNQUFNLENBQUNNLFFBQVAsS0FBb0IsR0FBeEIsRUFBNkI7QUFDM0JFLElBQUFBLGFBQWEsQ0FBQ1IsTUFBTSxDQUFDSixFQUFSLENBQWI7QUFDRDs7QUFDRCxNQUFJYSxFQUFFLEdBQUdmLFNBQVMsQ0FBQ00sTUFBTSxDQUFDTSxRQUFSLENBQWxCO0FBQ0EsU0FBT0csRUFBRSxDQUFDVCxNQUFNLENBQUNMLEVBQVIsRUFBWUssTUFBTSxDQUFDSixFQUFuQixDQUFUO0FBQ0Q7O0FBRUQsU0FBU0ssWUFBVCxDQUFzQkYsR0FBdEIsRUFBMkI7QUFDekIsT0FBSyxJQUFJTyxRQUFULElBQXFCWixTQUFyQixFQUFnQztBQUM5QixRQUFJUyxHQUFHLEdBQUdKLEdBQUcsQ0FBQ1csT0FBSixDQUFZSixRQUFaLENBQVY7O0FBQ0EsUUFBSUgsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNaLGFBQU87QUFBQ0csUUFBQUEsUUFBUSxFQUFSQSxRQUFEO0FBQVdILFFBQUFBLEdBQUcsRUFBSEE7QUFBWCxPQUFQO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFNBQVNFLGNBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDO0FBQ2hDLE1BQUksQ0FBQ1osU0FBUyxDQUFDWSxRQUFELENBQWQsRUFBMEI7QUFDeEIsVUFBTSxJQUFJSyxLQUFKLENBQVUsdUJBQXVCTCxRQUFqQyxDQUFOO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTQyxXQUFULENBQXFCSyxLQUFyQixFQUE0QjtBQUMxQixNQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDN0IsVUFBTSxJQUFJRCxLQUFKLENBQVUsZ0RBQWdERSxNQUFNLENBQUNELEtBQUQsQ0FBaEUsQ0FBTjtBQUNEO0FBQ0Y7O0FBRUQsU0FBU0osYUFBVCxDQUF1Qk0sT0FBdkIsRUFBZ0M7QUFDOUIsTUFBSUEsT0FBTyxLQUFLLENBQWhCLEVBQW1CO0FBQ2pCLFVBQU0sSUFBSUgsS0FBSixDQUFVLHNDQUFWLENBQU47QUFDRDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEZXRlY3RzIG9wZXJhdGlvbiBpbiBzdHJpbmdcbiAqIFN1cHBvcnRzOiAnKicsICcrJywgJy0nXG4gKi9cblxuY29uc3Qgb3BlcmF0b3JzID0ge1xuICAnKic6ICh2MSwgdjIpID0+IHYxICogdjIsXG4gICcrJzogKHYxLCB2MikgPT4gdjEgKyB2MixcbiAgJy0nOiAodjEsIHYyKSA9PiB2MSAtIHYyLFxuICAnLyc6ICh2MSwgdjIpID0+IHYxIC8gdjIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGlzT3BlcmF0aW9uLFxuICBleGVjLFxufTtcblxuLyoqXG4gKiBJcyBvcGVyYXRpb24gaW4gc3RyaW5nOiAnMC4yNSAqICRhYmMnID0+IHtvcGVyYXRvcjogJyonLCB2MTogJzAuMjUnLCB2MjogJyRhYmMnfVxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICovXG5mdW5jdGlvbiBpc09wZXJhdGlvbihzdHIpIHtcbiAgbGV0IG9wSW5mbyA9IGZpbmRPcGVyYXRvcihzdHIpO1xuICBpZiAob3BJbmZvKSB7XG4gICAgb3BJbmZvLnYxID0gc3RyLnN1YnN0cigwLCBvcEluZm8ucG9zKS50cmltKCk7XG4gICAgb3BJbmZvLnYyID0gc3RyLnN1YnN0cihvcEluZm8ucG9zICsgMSkudHJpbSgpO1xuICAgIGRlbGV0ZSBvcEluZm8ucG9zO1xuICAgIHJldHVybiBvcEluZm87XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogRXhlY3V0ZXMgb3BlcmF0aW9uXG4gKiBAcGFyYW0ge09iamVjdH0gb3BJbmZvXG4gKi9cbmZ1bmN0aW9uIGV4ZWMob3BJbmZvKSB7XG4gIGFzc2VydE9wZXJhdG9yKG9wSW5mby5vcGVyYXRvcik7XG4gIGFzc2VydFZhbHVlKG9wSW5mby52MSk7XG4gIGFzc2VydFZhbHVlKG9wSW5mby52Mik7XG4gIGlmIChvcEluZm8ub3BlcmF0b3IgPT09ICcvJykge1xuICAgIGFzc2VydERpdmlzb3Iob3BJbmZvLnYyKTtcbiAgfVxuICBsZXQgZm4gPSBvcGVyYXRvcnNbb3BJbmZvLm9wZXJhdG9yXTtcbiAgcmV0dXJuIGZuKG9wSW5mby52MSwgb3BJbmZvLnYyKTtcbn1cblxuZnVuY3Rpb24gZmluZE9wZXJhdG9yKHN0cikge1xuICBmb3IgKGxldCBvcGVyYXRvciBpbiBvcGVyYXRvcnMpIHtcbiAgICBsZXQgcG9zID0gc3RyLmluZGV4T2Yob3BlcmF0b3IpO1xuICAgIGlmIChwb3MgPj0gMCkge1xuICAgICAgcmV0dXJuIHtvcGVyYXRvciwgcG9zfTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0T3BlcmF0b3Iob3BlcmF0b3IpIHtcbiAgaWYgKCFvcGVyYXRvcnNbb3BlcmF0b3JdKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG9wZXJhdG9yOiAnICsgb3BlcmF0b3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFZhbHVlKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdPcGVyYXRpb24gdmFsdWUgc2hvdWxkIGJlIG51bWJlciwgeW91IHRyeTogJyArIFN0cmluZyh2YWx1ZSkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydERpdmlzb3IoZGl2aXNvcikge1xuICBpZiAoZGl2aXNvciA9PT0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignT3BlcmF0aW9uIGRpdmlzb3Igc2hvdWxkIG5vdCBiZSB6ZXJvJyk7XG4gIH1cbn1cbiJdfQ==