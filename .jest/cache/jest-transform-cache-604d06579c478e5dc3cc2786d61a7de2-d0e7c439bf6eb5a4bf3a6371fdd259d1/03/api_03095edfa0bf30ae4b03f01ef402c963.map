{"version":3,"sources":["api.js"],"names":["BUILD_EVENT","EStyleSheet","child","builded","sheets","globalVars","listeners","_proxyToOriginal","obj","sheet","Sheet","push","calc","getResult","rawGlobalVars","_calcGlobalVars","_calcSheets","_callListeners","expr","prop","varsArr","Value","event","listener","_assertSubscriptionParams","filter","item","forEach","clearCache","_checkGlobalVars","$theme","Style","calculatedVars","Array","isArray","props","Object","defineProperty","get","StyleSheet","enumerable","keys","key","vars","isVar","mq","isMediaQuery","Error"],"mappings":"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","sourcesContent":["/**\n * Extended StyleSheet API\n */\n\nimport {StyleSheet} from 'react-native';\nimport Sheet from './sheet';\nimport Style from './style';\nimport Value from './value';\nimport vars from './replacers/vars';\nimport mq from './replacers/media-queries';\nimport child from './child';\n\nconst BUILD_EVENT = 'build';\n\nexport default class EStyleSheet {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.child = child;\n    this.builded = false;\n    this.sheets = [];\n    this.globalVars = null;\n    this.listeners = {};\n    this._proxyToOriginal();\n  }\n\n  /**\n   * Creates stylesheet that will be calculated after build\n   * @param {Object} obj\n   * @returns {Object}\n   */\n  create(obj) {\n    const sheet = new Sheet(obj);\n    // todo: add options param to allow create dynamic stylesheets that should not be stored\n    this.sheets.push(sheet);\n    if (this.builded) {\n      sheet.calc(this.globalVars);\n    }\n    return sheet.getResult();\n  }\n\n  /**\n   * Builds all created stylesheets with passed variables\n   * @param {Object} [rawGlobalVars]\n   */\n  build(rawGlobalVars) {\n    this.builded = true;\n    this._calcGlobalVars(rawGlobalVars);\n    this._calcSheets();\n    this._callListeners(BUILD_EVENT);\n  }\n\n  /**\n   * Calculates particular value. For some values you need to pass prop (e.g. percent)\n   * @param {*} expr\n   * @param {String} [prop]\n   * @returns {*}\n   */\n  value(expr, prop) {\n    let varsArr = this.globalVars ? [this.globalVars] : [];\n    return new Value(expr, prop, varsArr).calc();\n  }\n\n  /**\n   * Subscribe to event. Currently only 'build' event is supported.\n   * @param {String} event\n   * @param {Function} listener\n   */\n  subscribe(event, listener) {\n    this._assertSubscriptionParams(event, listener);\n    this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT] || [];\n    this.listeners[BUILD_EVENT].push(listener);\n    if (this.builded) {\n      listener();\n    }\n  }\n\n  /**\n   * Unsubscribe from event. Currently only 'build' event is supported.\n   * @param {String} event\n   * @param {Function} listener\n   */\n  unsubscribe(event, listener) {\n    this._assertSubscriptionParams(event, listener);\n    if (this.listeners[BUILD_EVENT]) {\n      this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT].filter(item => item !== listener);\n    }\n  }\n\n  /**\n   * Clears all cached styles.\n   */\n  clearCache() {\n    this.sheets.forEach(sheet => sheet.clearCache());\n  }\n\n  // todo: move global vars stuff to separate module\n  _calcGlobalVars(rawGlobalVars) {\n    if (rawGlobalVars) {\n      this._checkGlobalVars(rawGlobalVars);\n      // $theme is system variable used for caching\n      rawGlobalVars.$theme = rawGlobalVars.$theme || 'default';\n      this.globalVars = new Style(rawGlobalVars, [rawGlobalVars]).calc().calculatedVars;\n    }\n  }\n\n  _calcSheets() {\n    this.sheets.forEach(sheet => sheet.calc(this.globalVars));\n  }\n\n  _callListeners(event) {\n    if (Array.isArray(this.listeners[event])) {\n      this.listeners[event].forEach(listener => listener());\n    }\n  }\n\n  _proxyToOriginal() {\n    // see: https://facebook.github.io/react-native/docs/stylesheet.html\n    const props = [\n      'setStyleAttributePreprocessor',\n      'hairlineWidth',\n      'absoluteFill',\n      'absoluteFillObject',\n      'flatten',\n    ];\n    props.forEach(prop => {\n      Object.defineProperty(this, prop, {\n        get: () => StyleSheet[prop],\n        enumerable: true,\n      });\n    });\n  }\n\n  _checkGlobalVars(rawGlobalVars) {\n    Object.keys(rawGlobalVars).forEach(key => {\n      if (!vars.isVar(key) && !mq.isMediaQuery(key)) {\n        throw new Error(\n          `EStyleSheet.build() params should contain global variables (start with $) ` +\n          `or media queries (start with @media). Got '${key}'.`\n        );\n      }\n    });\n  }\n\n  _assertSubscriptionParams(event, listener) {\n    if (event !== BUILD_EVENT) {\n      throw new Error(`Only '${BUILD_EVENT}' event is currently supported.`);\n    }\n    if (typeof listener !== 'function') {\n      throw new Error('Listener should be a function.');\n    }\n  }\n}\n"]}