120287c1bed8f5dea7724b5ca8113900
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _PostCell = _interopRequireDefault(require("../PostCell"));

var post = {
  "id": "1",
  "createdAt": "2020-02-18T04:40:49.601Z",
  "title": "Principal Identity Associate",
  "image": "https://images.unsplash.com/photo-1582043725042-f3d1873eeadf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80",
  "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
  "likes": 68,
  "comments": 43,
  "user_id": [{
    "id": "1",
    "postId": "1",
    "last_seen": "2020-02-18T06:33:57.162Z",
    "name": "Charles Hickle",
    "avatar": "https://s3.amazonaws.com/uifaces/faces/twitter/bruno_mart/128.jpg",
    "followers": 10,
    "followings": 53,
    "description": "Extended logistical array",
    "posts": [{
      "id": "1",
      "createdAt": "2020-02-18T04:40:49.601Z",
      "title": "Principal Identity Associate",
      "image": "https://images.unsplash.com/photo-1582043725042-f3d1873eeadf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80",
      "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
      "likes": 68,
      "comments": 43
    }]
  }]
};
describe('PostCell', function () {
  describe('Rendering', function () {
    it('draw all the cell data', function () {
      var component = _react.default.createElement(_PostCell.default, {
        post: post
      });

      var shallow = shallow(component);
      expect(shallow).toMatchSnapshot();
    });
    it('draw an empty cell', function () {
      var component = _react.default.createElement(_PostCell.default, null);

      var shallow = shallow(component);
      expect(shallow).toMatchSnapshot();
    });
  });
  describe('Interaction', function () {
    describe('onPressHandler', function () {
      it('should call onPress', function () {
        var mockOnPress = jest.fn();
        var component = (0, _enzyme.shallow)(_react.default.createElement(_PostCell.default, {
          post: post,
          onPress: mockOnPress
        }));
        var instance = component.instance();
        instance.onPressHandler();
        expect(mockOnPress).toHaveBeenCalled();
        expect(mockOnPress).toHaveBeenCalledTimes(1);
      });
    });
    describe('onUserPress', function () {
      it('should call onUserPress', function () {
        var mockOnPress = jest.fn();
        var component = (0, _enzyme.shallow)(_react.default.createElement(_PostCell.default, {
          post: post,
          onUserPress: mockOnPress
        }));
        var instance = component.instance();
        instance.onUserPresHandler();
        expect(mockOnPress).toHaveBeenCalled();
        expect(mockOnPress).toHaveBeenCalledTimes(1);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,