{"version":3,"sources":["sheet.js"],"names":["source","result","cache","Map","nativeSheet","globalVars","localVars","allVars","processedSource","clearResult","hasCache","applyCache","processMediaQueries","calcVars","calcStyles","calcNative","storeCache","getResult","mediaQueries","process","rawLocalVars","vars","extract","Style","calc","calculatedVars","filter","Boolean","extractedStyles","utils","excludeKeys","Object","keys","forEach","key","styles","calcStyle","styleProps","style","calculatedProps","merged","charAt","length","rnStyleSheet","StyleSheet","create","getCacheKey","has","cachedResult","get","set","clear","$theme"],"mappings":"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","sourcesContent":["import {StyleSheet} from 'react-native';\nimport Style from './style';\nimport utils from './utils';\nimport vars from './replacers/vars';\nimport mediaQueries from './replacers/media-queries';\n\nexport default class {\n  /**\n   * Constructor\n   * @param {Object} source\n   */\n  constructor(source) {\n    this.source = source;\n    this.result = {};\n    this.cache = new Map(); // cache result for each theme\n    this.nativeSheet = {};\n    this.globalVars = null;\n    this.localVars = null;\n    this.allVars = null;\n    this.processedSource = null;\n  }\n\n  /**\n   * Calculates sheet and update result\n   * @param {Object} globalVars\n   */\n  calc(globalVars) {\n    this.globalVars = globalVars;\n    this.clearResult();\n    if (this.hasCache()) {\n      this.applyCache();\n    } else {\n      this.processMediaQueries();\n      this.calcVars();\n      this.calcStyles();\n      this.calcNative();\n      this.storeCache();\n    }\n    return this.getResult();\n  }\n\n  processMediaQueries() {\n    this.processedSource = mediaQueries.process(this.source);\n  }\n\n  calcVars() {\n    const rawLocalVars = vars.extract(this.processedSource);\n    if (rawLocalVars) {\n      this.localVars = new Style(rawLocalVars, [rawLocalVars, this.globalVars]).calc().calculatedVars;\n      Object.assign(this.result, this.localVars);\n    } else {\n      this.localVars = null;\n    }\n    this.allVars = [this.localVars, this.globalVars].filter(Boolean);\n  }\n\n  calcStyles() {\n    const extractedStyles = utils.excludeKeys(this.processedSource, this.localVars);\n    Object.keys(extractedStyles).forEach(key => {\n      let styles = extractedStyles[key];\n      if (typeof styles === 'function') {\n        styles = styles();\n      }\n      if (styles && typeof styles === 'object') {\n        this.calcStyle(key, styles);\n      } else {\n        // copy primitive values to result as-is\n        this.result[key] = styles;\n      }\n    });\n  }\n\n  calcStyle(key, styleProps) {\n    const style = new Style(styleProps, this.allVars);\n    const {calculatedProps, calculatedVars} = style.calc();\n    const merged = Object.assign({}, calculatedVars, calculatedProps);\n    if (key.charAt(0) === '_') {\n      this.result[key] = merged;\n    } else {\n      this.result['_' + key] = merged;\n      this.nativeSheet[key] = calculatedProps;\n    }\n  }\n\n  calcNative() {\n    if (Object.keys(this.nativeSheet).length) {\n      const rnStyleSheet = StyleSheet.create(this.nativeSheet);\n      Object.assign(this.result, rnStyleSheet);\n    }\n  }\n\n  getResult() {\n    return this.result;\n  }\n\n  clearResult() {\n    Object.keys(this.result).forEach(key => delete this.result[key]);\n  }\n\n  hasCache() {\n    const key = this.getCacheKey();\n    return key && this.cache.has(key);\n  }\n\n  applyCache() {\n    const cachedResult = this.cache.get(this.getCacheKey());\n    Object.assign(this.result, cachedResult);\n  }\n\n  storeCache() {\n    const key = this.getCacheKey();\n    if (key) {\n      this.cache.set(key, Object.assign({}, this.result));\n    }\n  }\n\n  clearCache() {\n    this.cache.clear();\n  }\n\n  getCacheKey() {\n    return this.globalVars && this.globalVars.$theme;\n  }\n}\n"]}